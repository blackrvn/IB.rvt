<UserControl x:Class="RoomStudies.Views.RSNamingMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RoomStudies.Views"
             xmlns:viewModel="clr-namespace:RoomStudies.ViewModels"
             xmlns:userControls="clr-namespace:Library.Views.UserControls;assembly=Library"
             xmlns:behaviors="clr-namespace:Library.Views.Behaviors;assembly=Library"
             d:DataContext="{d:DesignInstance viewModel:RSNamingMenuViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Library;component/Views/Styles/MergedStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Style for the arrow expander -->
            <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupItem}">
                            <Expander IsExpanded="True" Background="Transparent" BorderThickness="0">
                                <Expander.Header>
                                    <DockPanel>
                                        <TextBlock Text="{Binding Name}" FontWeight="Bold" Margin="2"/>
                                    </DockPanel>
                                </Expander.Header>
                                <ItemsPresenter />
                            </Expander>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Style for the TabControl -->
            <Style x:Key="RoundedTabControl" TargetType="TabControl">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
            </Style>

            <!-- Style for TabItem -->
            <Style x:Key="RoundedTabItem" TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="Border" 
                        BorderThickness="0" 
                        BorderBrush="LightGray"
                        CornerRadius="5,5,0,0" 
                        Margin="0,0,5,0" 
                        Background="Transparent">
                                <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      ContentSource="Header"
                                      Margin="10,2"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Default state -->
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                                </Trigger>

                                <!-- MouseOver but not selected -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="WhiteSmoke"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="WhiteSmoke"/>
                                </MultiTrigger>

                                <!-- Selected (whether MouseOver or not) -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="LightGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <TabControl Style="{StaticResource RoundedTabControl}">
            <TabItem Header="Sheet" Style="{StaticResource RoundedTabItem}" 
                     IsSelected="{Binding IsSheetTabSelected, Mode=TwoWay}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="80"/>
                    </Grid.RowDefinitions>

                    <!-- Left Panel: Available Placeholders -->
                    <Border Grid.Column="0" Margin="5" BorderBrush="LightGray" BorderThickness="1" Padding="5" CornerRadius="5" Grid.RowSpan="3">
                        <ListView ItemsSource="{Binding GroupedPlaceholders}" 
                                BorderThickness="0" Margin="0,4,0,-4"
                                ItemContainerStyle="{StaticResource GreyListViewItem}"
                                SelectedItem="{Binding SelectedPlaceholder, Mode=TwoWay}"
                                SelectionMode="Single"
                                x:Name="PlaceholdersListView"
                                MouseDoubleClick="PlaceholdersListView_MouseDoubleClick">
                            <ListView.GroupStyle>
                                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}"/>
                            </ListView.GroupStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ParameterName}" MouseMove="Placeholder_MouseMove"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Border>

                    <!-- Middle Panel: Add/Remove Buttons -->
                    <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="5,0">
                        <Button Content="&gt;&gt;" 
                                Margin="0,5,0,10" Padding="5,2" 
                                Command="{Binding AddSelectedPlaceholderCommand}"
                                CommandParameter="Sheet"
                                ToolTip="Add selected placeholder to blueprint"/>
                        <Button Content="&lt;&lt;" 
                                Margin="0,10,0,5" Padding="5,2" 
                                Command="{Binding RemoveBlueprintElementCommand}"
                                CommandParameter="Sheet"
                                ToolTip="Remove selected item from blueprint"/>
                    </StackPanel>

                    <!-- Right Panel: Blueprint Builder Area -->
                    <Border Grid.Column="2" Margin="5" BorderBrush="LightGray" BorderThickness="1" Padding="5"
                        AllowDrop="True" DragOver="BlueprintBuilder_DragOver" Drop="BlueprintBuilder_Drop" Tag="Sheet" CornerRadius="5" Grid.ColumnSpan="2">
                        <ListBox ItemsSource="{Binding SheetBlueprintElements}" 
                                SelectedItem="{Binding SelectedSheetBlueprintElement, Mode=TwoWay}"
                                ItemContainerStyle="{StaticResource GreyListBoxItem}"
                                SelectionMode="Single"
                                x:Name="SheetBlueprintItemsControl"
                                MouseDoubleClick="BlueprintItemsControl_MouseDoubleClick">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ParameterName, StringFormat=[{0}]}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Border>
                    <Grid Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Delimiter" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <userControls:RoundedTextBox Grid.Row="0" Grid.Column="1" Padding="5" CornerRadius="5" BorderBrush="LightGray" Text="{Binding SheetDelimiter, Mode=TwoWay}"/>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="View" Style="{StaticResource RoundedTabItem}" 
                     IsSelected="{Binding IsViewTabSelected, Mode=TwoWay}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="80"/>
                    </Grid.RowDefinitions>

                    <!-- Left Panel: Available Placeholders -->
                    <Border Grid.Column="0" Margin="5" BorderBrush="LightGray" BorderThickness="1" Padding="5" CornerRadius="5" Grid.RowSpan="3">
                        <ListView ItemsSource="{Binding GroupedPlaceholders}" 
                                BorderThickness="0" Margin="0,4,0,-4"
                                ItemContainerStyle="{StaticResource GreyListViewItem}"
                                SelectedItem="{Binding SelectedPlaceholder, Mode=TwoWay}"
                                SelectionMode="Single"
                                x:Name="ViewPlaceholdersListView"
                                MouseDoubleClick="PlaceholdersListView_MouseDoubleClick">
                            <ListView.GroupStyle>
                                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}"/>
                            </ListView.GroupStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ParameterName}" MouseMove="Placeholder_MouseMove"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Border>

                    <!-- Middle Panel: Add/Remove Buttons -->
                    <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="5,0">
                        <Button Content="&gt;&gt;" 
                                Margin="0,5,0,10" Padding="5,2" 
                                Command="{Binding AddSelectedPlaceholderCommand}"
                                CommandParameter="View"
                                ToolTip="Add selected placeholder to blueprint"/>
                        <Button Content="&lt;&lt;" 
                                Margin="0,10,0,5" Padding="5,2" 
                                Command="{Binding RemoveBlueprintElementCommand}"
                                CommandParameter="View"
                                ToolTip="Remove selected item from blueprint"/>
                    </StackPanel>

                    <!-- Right Panel: Blueprint Builder Area -->
                    <Border Grid.Column="2" Margin="5" BorderBrush="LightGray" BorderThickness="1" Padding="5"
                        AllowDrop="True" DragOver="BlueprintBuilder_DragOver" Drop="BlueprintBuilder_Drop" Tag="View" CornerRadius="5" Grid.ColumnSpan="2">
                        <ListBox ItemsSource="{Binding ViewBlueprintElements}" 
                                SelectedItem="{Binding SelectedViewBlueprintElement, Mode=TwoWay}"
                                ItemContainerStyle="{StaticResource GreyListBoxItem}"
                                SelectionMode="Single"
                                x:Name="ViewBlueprintItemsControl"
                                MouseDoubleClick="BlueprintItemsControl_MouseDoubleClick">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ParameterName, StringFormat=[{0}]}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Border>
                    <Grid Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Delimiter" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <userControls:RoundedTextBox Grid.Row="0" Grid.Column="1" Padding="5" CornerRadius="5" BorderBrush="LightGray" Text="{Binding ViewDelimiter, Mode=TwoWay}"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="Numbering" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                            <RadioButton Content="Letters (A, B, C...)" IsChecked="{Binding UseLettersForNumbering}" Margin="5,0" VerticalAlignment="Center"/>
                            <RadioButton Content="Numbers (1, 2, 3...)" IsChecked="{Binding UseNumbersForNumbering}" Margin="15,0,5,0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>